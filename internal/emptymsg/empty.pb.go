// Code generated by protoc-gen-go. DO NOT EDIT.
// source: empty.proto

package emptymsg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3147679766dcb8, []int{0}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "emptymsg.EmptyMessage")
}

func init() { proto.RegisterFile("empty.proto", fileDescriptor_2b3147679766dcb8) }

var fileDescriptor_2b3147679766dcb8 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0xcd, 0x2d, 0x28,
	0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x73, 0x72, 0x8b, 0xd3, 0xa5, 0xa4,
	0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xe2, 0x49, 0xa5, 0x69, 0xfa, 0x48, 0xca, 0x94,
	0xf8, 0xb8, 0x78, 0x5c, 0x41, 0x5c, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0xa3, 0x29, 0x8c,
	0x5c, 0xc2, 0xc8, 0x02, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x8e, 0x5c, 0xfc, 0xee,
	0xa9, 0x25, 0xc8, 0x32, 0x42, 0x62, 0x7a, 0x30, 0x2b, 0xf4, 0x90, 0xc5, 0xa5, 0x70, 0x88, 0x0b,
	0x59, 0x71, 0x71, 0xc0, 0x8c, 0x10, 0x12, 0xd3, 0x83, 0x38, 0x4a, 0x0f, 0xe6, 0x28, 0x88, 0x52,
	0x29, 0x1c, 0xe2, 0x4e, 0xc2, 0x51, 0x82, 0x99, 0x79, 0x25, 0xa9, 0x45, 0x79, 0x89, 0x39, 0xfa,
	0x30, 0xd3, 0x93, 0xd8, 0xc0, 0x8a, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x68, 0x82, 0x55,
	0xfc, 0xf8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmptyMessageServiceClient is the client API for EmptyMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmptyMessageServiceClient interface {
	GetEmptyMessage(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	GetEmpty(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type emptyMessageServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmptyMessageServiceClient(cc *grpc.ClientConn) EmptyMessageServiceClient {
	return &emptyMessageServiceClient{cc}
}

func (c *emptyMessageServiceClient) GetEmptyMessage(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/emptymsg.EmptyMessageService/GetEmptyMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emptyMessageServiceClient) GetEmpty(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/emptymsg.EmptyMessageService/GetEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmptyMessageServiceServer is the server API for EmptyMessageService service.
type EmptyMessageServiceServer interface {
	GetEmptyMessage(context.Context, *EmptyMessage) (*EmptyMessage, error)
	GetEmpty(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedEmptyMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmptyMessageServiceServer struct {
}

func (*UnimplementedEmptyMessageServiceServer) GetEmptyMessage(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmptyMessage not implemented")
}
func (*UnimplementedEmptyMessageServiceServer) GetEmpty(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmpty not implemented")
}

func RegisterEmptyMessageServiceServer(s *grpc.Server, srv EmptyMessageServiceServer) {
	s.RegisterService(&_EmptyMessageService_serviceDesc, srv)
}

func _EmptyMessageService_GetEmptyMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmptyMessageServiceServer).GetEmptyMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emptymsg.EmptyMessageService/GetEmptyMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmptyMessageServiceServer).GetEmptyMessage(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmptyMessageService_GetEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmptyMessageServiceServer).GetEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emptymsg.EmptyMessageService/GetEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmptyMessageServiceServer).GetEmpty(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmptyMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emptymsg.EmptyMessageService",
	HandlerType: (*EmptyMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEmptyMessage",
			Handler:    _EmptyMessageService_GetEmptyMessage_Handler,
		},
		{
			MethodName: "GetEmpty",
			Handler:    _EmptyMessageService_GetEmpty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "empty.proto",
}
